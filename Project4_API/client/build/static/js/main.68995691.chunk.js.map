{"version":3,"sources":["actions/SearchActions.js","components/layout/Navbar.js","components/user/SignUp.js","actions/UserActions.js","components/user/SignIn.js","components/movie_info/MovieDetail.js","components/movie_info/NewMovieList.js","components/movie_info/MovieLoader.js","components/layout/FavoritesList.js","components/layout/SearchList.js","components/layout/HomePageList.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/movieReducer.js","reducers/optionReducer.js","reducers/rootReducer.js","index.js"],"names":["Search","query","pageNumber","dispatch","type","payload","axios","get","concat","then","res","movies","data","loading","length","AppNavbar","timer","state","searchTerm","category","sortType","desc","isOpen","toggle","_this","setState","renderNavItems","props","loggedIn","react_default","a","createElement","reactstrap_es","nav","inNavbar","caret","user","email","Link","to","navbar","className","style","marginLeft","_this2","this","clearTimeout","setTimeout","optionSearch","_this3","options","_this$state","searchURL","color","dark","expand","class","onClick","inline","onSubmit","handleSubmit","width","data-cy","list","placeholder","onChange","e","target","value","getOptions","id","height","map","option","key","_id","toLowerCase","Component","connect","auth","token","index","searchName","queryTerm","url","OptionSearch","SignUp","password","createUser","preventDefault","handleFormChange","newState","validEmail","includes","emailStyle","borderColor","passwordStyle","Redirect","message","for","valid","invalid","disabled","post","catch","err","response","CreateUser","SignIn","signIn","signInUser","console","log","SignInUser","MovieDetail","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addFavorite","movieId","changeFavoriteMovies","removeFavorite","detailsVisible","setDetails","bind","assertThisInitialized","job","castLength","slice","actor","name","favorites","filter","movie","title","size","src","photo","alt","overview","renderJobDetails","popularity","votes","block","marginTop","marginBottom","details","renderDetails","backgroundColor","alignItems","release_date","rating","flexStart","renderFavoriteButton","userId","isDelete","body","ChangeFavoriteMovies","NewMovieList","directors","credits","crew","crewMember","movie_info_MovieDetail","cast","genres","poster_path","vote_average","vote_count","MovieLoader","display","flexDirection","justifyContent","FavoritesList","loadNewFavorites","bottom","fetchFavoriteMovies","newMovies","prevProps","MovieLoader_MovieLoader","react_bottom_scroll_listener_umd_default","onBottom","movie_info_NewMovieList","FetchFavoriteMovies","SearchList","loadNewMoviesFromSearch","match","params","search","newSearch","HomePageList","loadNewMovies","App","BrowserRouter","Navbar","Switch","Route","path","component","exact","Boolean","window","location","hostname","initState","AuthReducer","arguments","undefined","action","objectSpread","initialState","searchMode","favoriteMode","MovieReducer","toConsumableArray","OptionReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68995691.chunk.js","sourcesContent":["import axios from \"axios/index\";\n\nexport const Search = (query, pageNumber) => dispatch => {\n    dispatch({\n        type: \"INITIATE_SEARCH\",    // tells the reducer that we are now initiating a new search\n        payload: true,\n    });\n    return axios.get(`/api/${query}`)\n        .then(res => {\n            if (pageNumber <= 1) {\n                dispatch({\n                    type: \"MOVIE_SEARCH\",\n                    payload: {\n                        movies: res.data.movies,\n                        loading: false,\n                    }\n                });\n                // returns the length just to know if we are at the bottom of the collection or not.\n                return res.data.movies.length\n            } else {\n                dispatch({\n                    type: \"LOAD_NEW_PAGE\",\n                    payload: {\n                        movies: res.data.movies,\n                        loading: false,\n                    }\n                });\n                return res.data.movies.length\n            }\n        })\n};\n\nexport const OptionSearch = (index, searchName) => dispatch => {\n    let queryTerm = index === 'movies' ? \"movieTitle\" : \"genreName\";\n    const url = `/api/${index}/search?${queryTerm}=${searchName}&sortOn=popularity&desc=true&page=1&limit=6`;\n    return axios.get(url)\n        .then((res) => {\n            dispatch({\n                type: \"FETCH_OPTIONS\",\n                payload: res.data[index]\n            });\n        })\n};\n","import React, {Component} from 'react';\nimport {\n    Navbar,\n    Form,\n    Container,\n    Input,\n    Button,\n    NavItem,\n    Nav,\n    Col,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownItem,\n    DropdownMenu\n} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {OptionSearch} from \"../../actions/SearchActions\";\nimport {connect} from \"react-redux\";\n\nclass AppNavbar extends Component {\n\n\n    timer = null;\n\n    state = {\n        searchTerm: '',\n        category: 'genres',\n        sortType: 'title',\n        desc: true,\n        isOpen: false,\n    };\n\n    toggle = () => {\n       this.setState({\n         isOpen: !this.state.isOpen\n       });\n    }\n\n    // Getting the options that will show in the drop down menu under the search bar\n    // The setTimeout functions is set to 150ms as we do not want to search whenever there is a change\n    // as it will make the drop down laggy.\n    getOptions() {\n        if (this.timer) {\n            clearTimeout(this.timer)\n        }\n        if (this.state.searchTerm) {\n            this.timer = setTimeout(() => {\n                this.props.optionSearch(this.state.category, this.state.searchTerm);\n            }, 150);\n        }\n    };\n\n    // Rendering the nav part of the navbar depending on whether or not a user is signed in\n    renderNavItems = () => {\n        if (this.props.loggedIn) {\n            return (\n                <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                        Logged in as: {this.props.user.email}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem><Link to={`/favorites`}>View Favorite Movies</Link></DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n            )\n        } else {\n            return (\n                <Nav navbar>\n                    <NavItem>\n                        <Link to={'/signin'} className={\"custom-btn\"} style={{\"marginLeft\": \"-10px\"}}> <Button>Sign\n                            In</Button></Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link to={'/signup'} className={\"custom-btn\"}><Button>Sign Up</Button></Link>\n                    </NavItem>\n                </Nav>\n            );\n        }\n    };\n\n    render() {\n\n        let {options} = this.props;\n        let {searchTerm, category, sortType, desc} = this.state;\n        // as the endpoint in the api uses different variables than our state,\n        // we have to change the category accordingly\n        category = category === 'movies' ? 'movieTitle' : 'genreName';\n        searchTerm = !searchTerm ? '\"\"' : searchTerm;\n        // This is the url you will go to if you do a search. The searchList component will know\n        // if there has been a change in the URL, and perform a new search based on the new URL\n        const searchURL = `${category}=${searchTerm}&sortOn=${sortType}&desc=${desc}`;\n\n        return (\n            <div>\n                <Navbar color={\"dark\"} dark expand={\"lg\"} className={\"mb-5\"}>\n                    <Container class=\"container-fluid\">\n                      <Link to={\"/prosjekt4\"}><NavbarBrand>Movie Database</NavbarBrand></Link>\n                      <NavbarToggler onClick={this.toggle} />\n                      <Collapse isOpen={this.state.isOpen} navbar>\n                        <Form inline onSubmit={this.handleSubmit} style={{width: \"75%\"}}>\n                            <Input\n                                data-cy={\"search-bar\"}\n                                list={\"searchbar\"}\n                                style={{width: \"35%\"}}\n                                type={\"text\"}\n                                placeholder={\"Search for movie or director\"}\n                                onChange={e => {\n                                    // If you clear the search window, you will get the first movies that were available\n                                    // Will also clear the options available\n                                    this.setState({searchTerm: e.target.value}, () => this.getOptions(e));\n                                }}\n                            />\n                            {options &&\n                            <datalist data-cy={\"option-list\"} id={\"searchbar\"} style={{height: \"200px\"}}>\n                                {options.map(option => (\n                                    <option key={option._id}\n                                            value={option[this.state.category.toLowerCase() === \"movies\" ? \"title\" : \"name\"]}/>))}\n                            </datalist>}\n                            <Input data-cy={\"category-input\"} style={{\"marginLeft\": \"5px\"}} type={\"select\"} onChange={e => {\n                                this.setState({category: e.target.value}, () => this.getOptions())\n                            }}>\n                                <option value={\"genres\"}>Genres</option>\n                                <option value={\"movies\"}>Movies</option>\n                            </Input>\n                            <h6 style={{color: 'white'}}>-sort by-</h6>\n                            <Input data-cy={\"sort-input\"} style={{\"marginLeft\": \"5px\"}} type={\"select\"} onChange={e => {\n                                this.setState({sortType: e.target.value})\n                            }}>\n                                <option value={\"title\"}>Title</option>\n                                <option value={\"release_date\"}>Year</option>\n                                <option value={\"vote_average\"}>Rating</option>\n                                <option value={\"popularity\"}>Popularity</option>\n                                <option value={\"vote_count\"}>Votes</option>\n                            </Input>\n                            <Input data-cy={\"sort-order\"} type={\"select\"} style={{\"marginLeft\": \"5px\"}}\n                                   onChange={e => this.setState({desc: !this.state.desc})}>\n                                <option>Desc</option>\n                                <option>Asc</option>\n                            </Input>\n                            <Link to={`/search/${searchURL}`}><Button data-cy={\"search-btn\"} style={{\"marginLeft\": \"5px\"}}>Search</Button></Link>\n                        </Form>\n                        <Col>\n                          {this.renderNavItems()}\n                        </Col>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        optionSearch: (index, searchTerm) => dispatch(OptionSearch(index, searchTerm)),\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user,\n        loggedIn: state.auth.loggedIn,\n        token: state.auth.token,\n        options: state.options.options,\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {Form, FormGroup, Input, Button, Label, FormFeedback, Alert} from 'reactstrap';\n\nimport {CreateUser} from '../../actions/UserActions';\n\nclass SignUp extends Component {\n    timer = null;\n\n    state = {\n        email: '@',\n        password: '',\n    };\n\n    createUser = (e) => {\n        e.preventDefault();\n        this.props.createUser(this.state.email, this.state.password)\n    };\n\n\n    handleFormChange = (e, newState) => {\n        if (this.timer) {\n            clearTimeout(this.timer)\n        }\n        this.timer = setTimeout(() => this.setState(newState), 800);\n\n    };\n\n\n    render() {\n        const validEmail = this.state.email.includes('@');\n        let emailStyle = this.state.email === '@' ? {\"borderColor\": \"grey\"} : {};\n        let passwordStyle = !this.state.password ? {\"borderColor\": \"grey\"} : {};\n        if (this.props.loggedIn) {\n            return (\n                <Redirect to={'/prosjekt4'}/>\n            )\n        }\n        return (\n            <div className={'container center-div'}>\n                {this.props.message &&\n                <Alert color={\"danger\"} style={{width: \"50%\"}}>{this.props.message}</Alert>}\n                <Form onSubmit={this.createUser} style={{width: \"50%\"}}>\n                    <FormGroup>\n                        <Label for={\"email\"}>Email Address</Label>\n                        <Input\n                            style={emailStyle}\n                            valid={validEmail && !this.props.message}\n                            invalid={!validEmail}\n                            type={\"email\"}\n                            placeholder={\"Type in your email\"}\n                            onChange={e => this.handleFormChange(e, {email: e.target.value})}\n                        />\n                        <FormFeedback>{this.state.email.includes('@') ? null : \"Not a valid email. you need @\"}</FormFeedback>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for={\"password\"}>Password</Label>\n                        <Input\n                            style={passwordStyle}\n                            valid={this.state.password.length > 4}\n                            invalid={!(this.state.password.length > 4)}\n                            type={\"password\"}\n                            placeholder={\"Please type a password\"}\n                            onChange={e => this.handleFormChange(e, {password: e.target.value})}\n                        />\n                        <FormFeedback>You need at least 5 characters</FormFeedback>\n                    </FormGroup>\n\n                    <FormGroup className={\"center-div\"}>\n                        <Button style={{width: \"40%\"}} disabled={!(validEmail && this.state.password.length > 4)}>\n                            Create User\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createUser: (email, password) => dispatch(CreateUser(email, password))\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        message: state.auth.message,\n        loggedIn: state.auth.loggedIn,\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import axios from 'axios';\n\n\n// Creating a new user and adding it to the database\nexport const CreateUser = (email, password) => dispatch => {\n    const user = {\n        email,\n        password\n    };\n    axios.post(`api/users/signup`, user)\n        .then((res) => {\n            dispatch({\n                type: \"CREATE_USER_SUCCESS\",\n                payload: res.data\n            })\n        }).catch(err => {\n        dispatch({\n            type: 'CREATE_USER_ERROR',\n            payload: err.response.data\n        })\n    })\n};\n\n//Signing an existing user to the application, so that they can view their favorite movies\nexport const SignInUser = (email, password) => dispatch => {\n    const user = {\n        email,\n        password,\n    };\n    axios.post('api/users/signin', user)\n        .then(res => {\n            dispatch({\n                type: 'SIGNIN_USER_SUCCESS',\n                payload: res.data,\n            })\n            return res.data\n        }).catch(err => {\n        console.log(err.response);\n        dispatch({\n            type: 'USER_SIGNIN_ERROR',\n            payload: err.response\n        })\n    })\n};\n\n// Changing favorite movies. If isDelete is true, you are deleting a movie from your list, opposite if false\nexport const ChangeFavoriteMovies = (userId, movieId, isDelete) => dispatch => {\n    const body = {\n        movieId,\n        isDelete\n    };\n\n    axios.post(`/api/users/${userId}/favorites`, body)\n        .then((res) => {\n            dispatch({\n                type: 'FAVORITES_CHANGED',\n                payload: res.data,\n            })\n        }).catch(err => {\n        console.log(err)\n    })\n};\n\n\nexport const FetchFavoriteMovies = (userId, pageNumber) => dispatch => {\n    dispatch({\n        type: \"INITIATE_SEARCH\",\n        payload: true,\n    });\n    return axios.get(`/api/users/${userId}/favorites?page=${pageNumber}&limit=10`)\n        .then(res => {\n            if (pageNumber <= 1) {\n                dispatch({\n                    type: 'GET_FAVORITE_MOVIES',\n                    payload: {\n                        movies: res.data.movies,\n                        loading: false,\n                    }\n                });\n                return res.data.movies.length\n            } else {\n                console.log(res.data.movies);\n                dispatch({\n                    type: \"LOAD_NEW_PAGE\",\n                    payload: {\n                        movies: res.data.movies,\n                        loading: false,\n                    }\n                });\n                return res.data.movies.length\n            }\n        })\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport {Form, FormGroup, Input, Button, Label, FormFeedback, Alert} from 'reactstrap';\n\nimport {SignInUser} from '../../actions/UserActions';\n\nclass SignIn extends Component {\n    timer = null;\n\n    state = {\n        email: '',\n        password:''\n    };\n\n\n    signIn = (e) => {\n        e.preventDefault();\n        this.props.signInUser(this.state.email, this.state.password);\n    };\n\n    handleFormChange = (e, newState) => {\n        this.setState(newState)\n    };\n\n    render() {\n        const validEmail = this.state.email.includes('@');\n        let emailStyle = this.state.email === '@' ? {\"borderColor\": \"grey\"} : {};\n        let passwordStyle = !this.state.password ? {\"borderColor\": \"grey\"} : {};\n\n        if (this.props.loggedIn) {\n            return (\n                <Redirect to={'/prosjekt4'}/>\n            )\n        }\n        return (\n            <div className={'container center-div'} >\n                {this.props.message &&\n                <Alert data-cy={\"error-alert\"} color={\"danger\"} style={{width:\"50%\"}}>{this.props.message}</Alert>}\n                <Form onSubmit={this.signIn} style={{width: \"50%\"}}>\n                    <FormGroup>\n                        <Label for={\"email\"}>Email Address</Label>\n                        <Input\n                            data-cy={\"email-input\"}\n                            style={emailStyle}\n                            valid={validEmail && !this.props.message}\n                            invalid={!validEmail}\n                            type={\"email\"}\n                            placeholder={\"Type in your email\"}\n                            onChange={e => this.handleFormChange(e, {email: e.target.value})}\n                        />\n                        <FormFeedback>{this.state.email.includes('@') ? null : \"Not a valid email. you need @\"}</FormFeedback>\n\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for={\"password\"}>Password</Label>\n                        <Input\n                            data-cy={\"password-input\"}\n                            style={passwordStyle}\n                            valid={this.state.password.length > 4 || !this.state.length}\n                            invalid={!(this.state.password.length > 4)}\n                            type={\"password\"}\n                            placeholder={\"Please type a password\"}\n                            onChange={e => this.handleFormChange(e, {password: e.target.value})}\n                        />\n                        <FormFeedback>You need at least 5 characters</FormFeedback>\n                    </FormGroup>\n\n                    <FormGroup className={\"center-div\"}>\n                        <Button style={{width: \"40%\"}} disabled={!(validEmail && this.state.password.length > 4)}>\n                            Sign In\n                        </Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user,\n        loggedIn: state.auth.loggedIn,\n        message: state.auth.message\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signInUser: (email, password) => dispatch(SignInUser(email, password)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {ChangeFavoriteMovies} from '../../actions/UserActions';\nimport {Button} from 'reactstrap';\n\nclass MovieDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            detailsVisible: false\n        };\n        this.setDetails = this.setDetails.bind(this);\n    }\n\n    setDetails() {\n        this.setState({\n            detailsVisible: !this.state.detailsVisible\n        })\n    }\n\n    renderJobDetails(job) {\n        const castLength = this.props[job].slice(0, 10).length;\n        return this.props[job].slice(0, 10).map((actor, index) => {\n            if (index === castLength - 1) {\n                return actor.name;\n            } else {\n                return actor.name + ', ';\n            }\n        })\n    }\n\n    addFavorite = () => {\n        const {_id} = this.props.user;\n        const {movieId} = this.props;\n        this.props.changeFavoriteMovies(_id, movieId, false);\n    };\n\n    removeFavorite = () => {\n        const {_id} = this.props.user;\n        const {movieId} = this.props;\n        this.props.changeFavoriteMovies(_id, movieId, true);\n    };\n\n    // Renders the favorite button for a user. If the movie is a favorite, it will show an option to remove\n    // it from the users' list. If there is no user signed in it will show nothing\n    renderFavoriteButton() {\n        if (this.props.user) {\n            const {favorites} = this.props.user;\n            const {movieId} = this.props;\n            // checking if this movie id is in the list of favorite movies\n            if (favorites.filter(movie => movieId === movie).length === 0) {\n                return (\n                    <Button id={this.props.title} size={\"sm\"} className={\"favorite-button\"} onClick={this.addFavorite}>Add\n                        to Favorites</Button>\n                )\n            }\n            else {\n                return (\n                    <Button id={this.props.title} size={\"sm\"} className={\"favorite-button\"}\n                            onClick={this.removeFavorite}>Remove From Favorites</Button>\n                )\n            }\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n    //Rendering all the job details for a given movie\n    renderDetails() {\n        return (\n            <div className={\"movie-detail\"}>\n                <div className={\"row\"}>\n                    <div className={\"col-md-3 col-sm-12\"}>\n                        <img src={this.props.photo} alt=\"\" height={\"360\"} width={\"240\"}/>\n                    </div>\n                    <div data-cy={\"movie-info\"} className={\"col-md-7 offset-1 col-sm-12\"}>\n                        <p>{this.props.overview}</p>\n                        <h5>Director: {this.renderJobDetails('directors')}</h5>\n                        <h5>Cast: {this.renderJobDetails('cast')}</h5>\n                        <h5>Genres: {this.renderJobDetails('genres')}</h5>\n                        <h5>Popularity: {this.props.popularity}</h5>\n                        <h5>Votes: {this.props.votes}</h5>\n                    </div>\n                </div>\n                <div className=\"col-md-2 offset-5\">\n                    <Button\n                        data-cy={\"close-button\"}\n                        block\n                        style={{\"marginTop\": \"1rem\", \"marginBottom\": \"1rem\"}}\n                        onClick={this.setDetails}>Close</Button>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const details = this.state.detailsVisible ? this.renderDetails() : null;\n        return (\n            <div className={\"container\"} style={{'backgroundColor': this.props.color}}>\n                <div className={\"row\"} style={{\"height\": \"5rem\", \"alignItems\": \"center\"}}>\n                    <div className={\"col-md-8 col-sm-12\"}>\n                        <h3 data-cy={\"title\"}\n                            onClick={this.setDetails}>{this.props.title} ({this.props.release_date.slice(0, 4)})\n                            Rating: {this.props.rating}/10</h3>\n                    </div>\n                    <div className={\"col-md-3 col-xs-6\"} style={{\"flexStart\": \"end\"}}>\n                        {this.renderFavoriteButton()}\n                    </div>\n                </div>\n                {details}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.auth.loggedIn,\n        user: state.auth.user\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeFavoriteMovies: (userId, movieId, isDelete) => dispatch(ChangeFavoriteMovies(userId, movieId, isDelete))\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);","import React from 'react';\nimport MovieDetail from './MovieDetail';\n\nconst NewMovieList = (props) => {\n\n    const ListItems = () => {\n        return (\n            props.movies.map((movie, index) => {\n                    const directors = movie.credits.crew.filter(crewMember => crewMember.job === 'Director');\n                    return (\n                        <MovieDetail\n                            key={movie._id}\n                            movieId={movie._id}\n                            title={movie.title}\n                            color={index % 2 === 1 ? 'white' : '#dddddd'}\n                            overview={movie.overview}\n                            cast={movie.credits.cast}\n                            directors={directors}\n                            genres={movie.genres}\n                            photo={movie.poster_path}\n                            release_date={movie.release_date}\n                            rating={movie.vote_average}\n                            votes={movie.vote_count}\n                            popularity={movie.popularity}\n                        />\n                    );\n                }\n            ));\n    };\n    return (\n        <div data-cy={\"movie-list\"}>\n            {ListItems()}\n        </div>\n    )\n};\n\nexport default NewMovieList;","import React from \"react\";\n\nexport const MovieLoader = () => {\n    return (\n        <div style={{marginTop: \"10px\", marginBottom: \"20px\", display: \"flex\", \"flexDirection\": \"row\", justifyContent: \"center\"}}>\n            <div className=\"loader\"/>\n        </div>\n    );\n};\n\n","import React, {Component} from 'react';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport NewMovieList from '../movie_info/NewMovieList';\nimport {FetchFavoriteMovies} from \"../../actions/UserActions\";\nimport {MovieLoader} from \"../movie_info/MovieLoader\";\nimport {ListGroup} from \"reactstrap\";\n\nclass FavoritesList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNumber: 2,\n            bottom: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.user) {\n            const {_id} = this.props.user;\n            this.props.fetchFavoriteMovies(_id, 1);\n        }\n    };\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.user.favorites !== this.props.user.favorites) {\n            const {_id} = this.props.user;\n            this.props.fetchFavoriteMovies(_id, 1);\n        }\n    };\n\n    loadNewFavorites = () => {\n        if (this.state.bottom || this.props.loading) {\n            return\n        }\n        const {_id} = this.props.user;\n        this.setState({loading: true}, () => {\n            this.props.fetchFavoriteMovies(_id, this.state.pageNumber).then((newMovies) => {\n                this.setState({\n                    pageNumber: this.state.pageNumber + 1,\n                    bottom: newMovies === 0,\n                })\n            })\n        });\n    };\n\n    render() {\n        if (!this.props.user) {\n            return (\n                <Redirect to={\"/\"}/>\n            )\n        }\n        return (\n            <div className={\"container\"} style={{\"marginBottom\": \"20px\"}}>\n                {this.props.loading && <MovieLoader/>}\n                <BottomScrollListener onBottom={this.loadNewFavorites}>\n                    <ListGroup>\n                        <NewMovieList movies={this.props.movies}/>\n                    </ListGroup>\n                </BottomScrollListener>\n                {this.props.loading && <MovieLoader/>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user,\n        movies: state.movie.movies,\n        loading: state.movie.loading,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchFavoriteMovies: (userId, pageNumber) => dispatch(FetchFavoriteMovies(userId, pageNumber)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesList)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport NewMovieList from '../movie_info/NewMovieList';\nimport { MovieLoader } from '../movie_info/MovieLoader';\nimport { ListGroup } from 'reactstrap';\n\nimport { Search } from '../../actions/SearchActions';\n\n\nclass SearchList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNumber: 2,\n            newSearch: false,\n            bottom: false\n        };\n    };\n\n    // This.props.match.params will give us what parameters are in the URL\n    componentDidMount() {\n        const {query} = this.props.match.params;\n        const url = `movies/search?${query}&page=1&limit=10`;\n        this.props.search(url, 1)\n    }\n\n\n    // Component will update if there is a change in the url params. For example if there is a change in the chosen sorting category\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params !== this.props.match.params) {\n            const {query} = this.props.match.params;\n            const url = `movies/search?${query}&page=1&limit=10`;\n            this.setState({newSearch: true},() =>\n                this.props.search(url, 1).then(() =>\n                    this.setState({newSearch: false, pageNumber: 2}\n                )));\n        }\n    };\n\n\n    // Happens on bottom. If the search function returns 0, we know that we are on the bottom, and will stop searching\n    loadNewMoviesFromSearch = () => {\n        if (this.props.loading || this.state.bottom) {\n            return\n        }\n        const {query} = this.props.match.params;\n        const url = `movies/search?${query}&page=${this.state.pageNumber}&limit=10`;\n        this.props.search(url, this.state.pageNumber).then((newMovies) => {\n            this.setState({\n                bottom: newMovies === 0,\n                pageNumber: this.state.pageNumber + 1\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div className={\"container\"} style={{\"marginBottom\": \"20px\"}}>\n                {this.state.newSearch && <MovieLoader/>}\n                <BottomScrollListener onBottom={this.loadNewMoviesFromSearch}>\n                    <ListGroup>\n                        <NewMovieList movies={this.props.movies}/>\n                    </ListGroup>\n                </BottomScrollListener>\n                {this.props.loading && <MovieLoader/>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movies: state.movie.movies,\n        loading: state.movie.loading,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        search: (query, pageNumber) => dispatch(Search(query, pageNumber)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchList);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport {ListGroup} from 'reactstrap';\n\nimport {Search} from \"../../actions/SearchActions\";\nimport NewMovieList from \"../movie_info/NewMovieList\";\nimport {MovieLoader} from \"../movie_info/MovieLoader\";\n\n\nclass HomePageList extends Component {\n    state = {\n        pageNumber: 2,\n        bottom: false,\n    };\n\n    // This component will always just find the most popular movies. All the fun happens in searchList\n    componentDidMount() {\n        this.props.search('movies/search?movieTitle=\"\"&sortOn=popularity&desc=true&page=1&limit=10', 1);\n    }\n\n\n    //Load new movies when on bottom of the screen\n    loadNewMovies = () => {\n        if (this.props.loading || this.state.bottom) {\n            return\n        }\n        const url = `movies/search?movieTitle=\"\"&sortOn=popularity&desc=true&page=${this.state.pageNumber}&limit=10`;\n        this.props.search(url, this.state.pageNumber).then((newMovies) => {\n            this.setState({\n                bottom: newMovies === 0,\n                pageNumber: this.state.pageNumber + 1,\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div className={\"container\"} style={{\"marginBottom\": \"20px\"}}>\n                {this.state.loading && <MovieLoader/>}\n                <BottomScrollListener onBottom={this.loadNewMovies}>\n                    <ListGroup>\n                        <NewMovieList movies={this.props.movies}/>\n                    </ListGroup>\n                </BottomScrollListener>\n                {this.props.loading && <MovieLoader/>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movies: state.movie.movies,\n        loading: state.movie.loading,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        search: (query, pageNumber) => dispatch(Search(query, pageNumber)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageList);","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AppNavbar from './components/layout/Navbar';\nimport SignUp from './components/user/SignUp';\nimport SignIn from './components/user/SignIn';\nimport FavoritesList from './components/layout/FavoritesList';\nimport SearchList from './components/layout/SearchList';\nimport HomePageList from \"./components/layout/HomePageList\";\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <AppNavbar/>\n                    <Switch>\n                        <Route path={'/signUp'} component={SignUp}/>\n                        <Route path={'/signin'} component={SignIn}/>\n                        <Route path={'/search/:query'} component={SearchList}/>\n                        <Route path={'/favorites'} component={FavoritesList}/>\n                        <Route exact path={\"/prosjekt4\"} component={HomePageList}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    user: null,\n    message: null,\n    loggedIn: false,\n    token: null\n};\n\nconst AuthReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_USER_SUCCESS':\n            return {\n                ...state,\n                user: action.payload.user,\n                loggedIn: true\n            };\n        case 'CREATE_USER_ERROR':\n            return {\n                ...state,\n                user: null,\n                message: action.payload.message,\n            };\n        case 'SIGNIN_USER_SUCCESS':\n            return {\n                ...state,\n                user: action.payload.user,\n                loggedIn: true,\n                token: action.payload.token,\n\n            };\n        case 'USER_SIGNIN_ERROR':\n            return {\n                ...state,\n                user: null,\n                message: action.payload.data.message,\n                loggedIn: false,\n            };\n        case 'FAVORITES_CHANGED':\n            return {\n                ...state,\n                user: action.payload.user\n            };\n        default:\n            return state\n    }\n};\n\nexport default AuthReducer","const initialState = {\n    movies: [],\n    searchMode: false,\n    favoriteMode: false,\n    pageNumber: 1,\n    loading: false,\n};\n\nconst MovieReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case \"FETCH_MOVIES\":\n            return {\n                ...state,\n                movies: [...action.payload],\n            };\n        case \"MOVIE_SEARCH\":\n            return {\n                ...state,\n                movies: [...action.payload.movies],\n                loading: action.payload.loading\n            };\n        case \"LOAD_NEW_PAGE\":\n            return {\n                ...state,\n                movies: [...state.movies, ...action.payload.movies],\n                loading: action.payload.loading,\n            };\n        case \"SET_SEARCH_MODE\":\n            return {\n                ...state,\n                searchMode: action.payload\n            };\n        case 'GET_FAVORITE_MOVIES':\n            return {\n                ...state,\n                movies: [...action.payload.movies],\n                loading: action.payload.loading,\n            };\n        case \"INITIATE_SEARCH\":\n            return {\n                ...state,\n                loading: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default MovieReducer","const OptionReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"FETCH_OPTIONS\":\n            return {\n                options: [...action.payload]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default OptionReducer","import AuthReducer from './authReducer';\nimport MovieReducer from './movieReducer';\nimport OptionReducer from './optionReducer'\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    auth: AuthReducer,\n    movie: MovieReducer,\n    options: OptionReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}