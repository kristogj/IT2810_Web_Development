Mitt abstrakte bilde
Her er foreløpig tekst for prosjekt 1. Med forbehold om mindre endringer.
Innleveringsfristen for denne blir fredag 31/8, med peer reviewing uka etter.

I denne oppgaven skal du lage en webside hvor du presenterer et selvlaget abstrakt interaktivt «kunstverk». Vi tenker her på en figur av 2D-objekter som kan etterligne noe eller være abstrakt (sirkler og firkanter av forskjellig størrelse som du forsøker å sette sammen til noe som kanskje ser estetisk eller morsomt ut). Målet med oppgaven er at du skal lære det som er beskrevet i læringsmålene.

Oppgaven løses individuelt og skal leveres som en zip-fil i Blackboard.

Etter innlevering skal du se over innleveringen fra andre ved hjelp av BB sitt peer-review system. For å få godkjent oppgaven og deltatt i peer review-prosessen, må du levere innen tidsfristen.

Oppgaven evalueres i forhold til læringsmålene som er beskrevet under.

Krav til innhold og funksjonalitet på websiden
Følgende elementer skal være med på websiden (heretter kalt side-elementer):

Tittel på bildet, kort (fiktiv) informasjon om «kunstneren» (ikke bruk ditt eget navn siden medstudenter skal se over oppgaven).
Selve bildet
Figuren skal ha en viss kompleksitet, men ikke større enn at den kan kodes manuelt eller med enkel programmering (minimum 10 elementer med variasjon i både type og fargelegging).
Figuren skal være interaktive, eksempelvis ha figur-elementer som skifter farge eller størrelse ved mouseover eller annen brukerinteraksjon. Minimum skal 2 forskjellige elementer ha forskjellig oppførsel.
Nederst på siden skal du ha en knapp eller annet klikkbart element for å vise/skjule dokumentasjon (se lenger ned for beskrivelse av hva som skal dokumenteres).
Siden som helhet skal ha et «godt» design (som selvsagt er vanskelig å definere hva er, men vi forventer gjennomført bruk av fonter og fornuftig bruk av fontstørrelse, ryddig layout av side-elementene med passe mellomrom og at side-elementene er plassert fornuftig i forhold til hverandre.


Krav til bruk av teknologi
Bruk av SVG (Scalable Vector Graphics) i HTML dokumentet eller HTML5 canvas og canvas-apiet for selve bildet og opptegning av bilde-elementene.
Bruk av CSS-grid og/eller CSS Flexbox for layout av side-elementene
Bruk av jQuery-biblioteket

Krav til testing
Websiden skal fungere og ha lik oppførsel i forskjellige weblesere for pc.
Du skal teste i minimum to forskjellige weblesere (bruk de mest vanlige som Safari, Edge, Firefox, Chrome, ...).

Læringsmål for oppgaven
Videregående kunnskap og ferdigheter i HTML, CSS, Javascript.
God kunnskap om layout-problematikken for web-sider og løsningene CSS-grid og CSS-flexbox. Ferdigheter i å designe websider med flytende layout av side-elementene.
Grunnleggende kunnskap om bruk av 2D-grafikk på websider. Skal kjenne til både SVG brukt i HTML-dokumenter og HTML5 canvas. Ferdigheter i å lage enkel grafikk og videregående ferdigheter i programmering av interaktive elementer i HTML.
Grunnleggende kunnskap om jQuery: hvilke programmerings-utfordringer biblioteket er ment å forenkle, hovedtyper av funksjonalitet som biblioteket tilbyr.
Kjenne til cross-browser testing og utføre enkle tester.
Ferdighet i å finne og nyttiggjøre seg relevant og god dokumentasjon og ta kontroll over egen læring.
Løsning + dokumentasjon skal vise at du har nådd læringsmålene for oppgaven.


Krav til dokumentasjonen
Dokumentasjonen skal diskutere og forklare dine valg og løsninger (500-1000 ord er en fornuftig lengde).

Gi en kort beskrivelser av CSS-grid og Flexbox-layout: hvilken utfordring er disse ment og løse, hva skiller disse to løsningene og forklar ditt valg.
Gi en kort beskrivelse av HTML canvas og bruk av SVG i HTML. Gjør rede for hvilken av disse som er best egnet til å løse utfordringen med å lage et bilde bestående av interaktive 2D-elementer som beskrevet i denne oppgaven.
Gi en kort beskrivelse av jQuery: hvilken funksjonalitet dette biblioteket tilbyr, og diskuter hva som er relevant for denne oppgaven.
Gi en kort beskrivelse av cross-browser testing, hvorfor dette må/bør gjøres, spesifiser hvilken testing du har utført på din webside.
List opp de viktigste (mest nyttige) informasjonskildene du har brukt (tutorials, websider, bøker).
Husk å oppgi kilder hvis du gjenbruker kodesnutter.

Plagiatkontroll
Kopiering og gjenbruk av kode/løsninger som er utviklet av andre vil kun godkjennes hvis det er gjort på en måte som gir/viser læringsutbytte!
I programmering er det naturlig å la seg inspirere av andres løsninger, gjenbruke fragmenter av kode etc. Husk å dokumentere kilder så unngår du å bli tatt for plagiering. Gjenbruk av løsninger fra innleverte prosjekt tidligere år eller andre former for omfattende kopiering, regnes som fusk.